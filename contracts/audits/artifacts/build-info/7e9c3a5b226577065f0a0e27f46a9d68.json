{
	"id": "7e9c3a5b226577065f0a0e27f46a9d68",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/audits/ForceTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Balance\n{\n    function getBalance() public view returns (uint){\n        return address(this).balance;\n    }\n    \n    fallback() external payable {\n        revert();\n    }\n\n    receive() external payable {\n        // Handle incoming Ether here\n    }\n}\n\ncontract ForceTransfer{\n    address payable toTransfer;\n\n    function getBalance() public view returns (uint){\n        return address(this).balance;\n    }\n    \n    function payToContract() public payable{\n    }\n    \n    constructor(address _address) {\n        toTransfer = payable(_address);\n    }\n    \n    function kill() public {\n        selfdestruct(toTransfer);\n    }\n\n    fallback() external payable {\n        revert();\n    }\n\n    receive() external payable {\n        // Handle incoming Ether here\n        revert();\n    }\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/audits/ForceTransfer.sol": {
				"Balance": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/audits/ForceTransfer.sol\":66:325  contract Balance... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/audits/ForceTransfer.sol\":66:325  contract Balance... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"contracts/audits/ForceTransfer.sol\":230:238  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/audits/ForceTransfer.sol\":89:182  function getBalance() public view returns (uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_10:\n        /* \"contracts/audits/ForceTransfer.sol\":132:136  uint */\n      0x00\n        /* \"contracts/audits/ForceTransfer.sol\":154:175  address(this).balance */\n      selfbalance\n        /* \"contracts/audits/ForceTransfer.sol\":147:175  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/audits/ForceTransfer.sol\":89:182  function getBalance() public view returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_15:\n        /* \"#utility.yul\":94:118   */\n      tag_17\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_12:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_20\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_15\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_18:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220924bebf8775f1e410548a8112ce7ac1d06b08580cefacd637e834ebfc825348964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060be8061001f6000396000f3fe608060405260043610601f5760003560e01c806312065fe014602a576025565b36602557005b600080fd5b348015603557600080fd5b50603c6050565b604051604791906065565b60405180910390f35b600047905090565b605f81607e565b82525050565b6000602082019050607860008301846058565b92915050565b600081905091905056fea2646970667358221220924bebf8775f1e410548a8112ce7ac1d06b08580cefacd637e834ebfc825348964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xBE DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3C PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x47 SWAP2 SWAP1 PUSH1 0x65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5F DUP2 PUSH1 0x7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x78 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0x4B 0xEB 0xF8 PUSH24 0x5F1E410548A8112CE7AC1D06B08580CEFACD637E834EBFC8 0x25 CALLVALUE DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:259:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_13": {
									"entryPoint": 80,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c806312065fe014602a576025565b36602557005b600080fd5b348015603557600080fd5b50603c6050565b604051604791906065565b60405180910390f35b600047905090565b605f81607e565b82525050565b6000602082019050607860008301846058565b92915050565b600081905091905056fea2646970667358221220924bebf8775f1e410548a8112ce7ac1d06b08580cefacd637e834ebfc825348964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3C PUSH1 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x47 SWAP2 SWAP1 PUSH1 0x65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5F DUP2 PUSH1 0x7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x78 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0x4B 0xEB 0xF8 PUSH24 0x5F1E410548A8112CE7AC1D06B08580CEFACD637E834EBFC8 0x25 CALLVALUE DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:259:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;230:8;;;89:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;132:4;154:21;147:28;;89:93;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "38000",
								"executionCost": "87",
								"totalCost": "38087"
							},
							"external": {
								"": "91",
								"getBalance()": "317"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 325,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220924bebf8775f1e410548a8112ce7ac1d06b08580cefacd637e834ebfc825348964736f6c63430008070033",
									".code": [
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 132,
											"end": 136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 175,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 147,
											"end": 175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 182,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/audits/ForceTransfer.sol\":\"Balance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/audits/ForceTransfer.sol\":{\"keccak256\":\"0x6999364ba66aa69a44149d91a7f559b689a062330f5958a72da24f150da33176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad168f3aa3f3cac804dca5777ff8f67d976078673db744ff19a20fee3b6e455\",\"dweb:/ipfs/QmcffmnYJBCz5Xn4nsWev6z9V92mpx44iTS2VDD3uJwCsc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ForceTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "payToContract",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/audits/ForceTransfer.sol\":327:855  contract ForceTransfer{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/audits/ForceTransfer.sol\":547:624  constructor(address _address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/audits/ForceTransfer.sol\":608:616  _address */\n  dup1\n    /* \"contracts/audits/ForceTransfer.sol\":587:597  toTransfer */\n  0x00\n  dup1\n    /* \"contracts/audits/ForceTransfer.sol\":587:617  toTransfer = payable(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/audits/ForceTransfer.sol\":547:624  constructor(address _address) {... */\n  pop\n    /* \"contracts/audits/ForceTransfer.sol\":327:855  contract ForceTransfer{... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/audits/ForceTransfer.sol\":327:855  contract ForceTransfer{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/audits/ForceTransfer.sol\":327:855  contract ForceTransfer{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2aaf6af8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x41c0e1b5\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/audits/ForceTransfer.sol\":838:846  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/audits/ForceTransfer.sol\":327:855  contract ForceTransfer{... */\n    tag_2:\n        /* \"contracts/audits/ForceTransfer.sol\":742:750  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/audits/ForceTransfer.sol\":388:481  function getBalance() public view returns (uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/audits/ForceTransfer.sol\":491:537  function payToContract() public payable{... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/audits/ForceTransfer.sol\":634:698  function kill() public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/audits/ForceTransfer.sol\":388:481  function getBalance() public view returns (uint){... */\n    tag_12:\n        /* \"contracts/audits/ForceTransfer.sol\":431:435  uint */\n      0x00\n        /* \"contracts/audits/ForceTransfer.sol\":453:474  address(this).balance */\n      selfbalance\n        /* \"contracts/audits/ForceTransfer.sol\":446:474  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/audits/ForceTransfer.sol\":388:481  function getBalance() public view returns (uint){... */\n      swap1\n      jump\t// out\n        /* \"contracts/audits/ForceTransfer.sol\":491:537  function payToContract() public payable{... */\n    tag_16:\n      jump\t// out\n        /* \"contracts/audits/ForceTransfer.sol\":634:698  function kill() public {... */\n    tag_19:\n        /* \"contracts/audits/ForceTransfer.sol\":680:690  toTransfer */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/audits/ForceTransfer.sol\":667:691  selfdestruct(toTransfer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"#utility.yul\":7:125   */\n    tag_24:\n        /* \"#utility.yul\":94:118   */\n      tag_26\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_14:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_29\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_24\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_27:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085c255b845a00e400e256181fca2b7617c4b25849c55cfd6e2580c6439884f0c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:1",
														"type": ""
													}
												],
												"src": "513:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:1",
														"type": ""
													}
												],
												"src": "594:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"src": "696:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:1"
															},
															"nodeType": "YulIf",
															"src": "1127:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:1",
														"type": ""
													}
												],
												"src": "1074:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102433803806102438339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b61012c806101176000396000f3fe60806040526004361060335760003560e01c806312065fe01460415780632aaf6af814606757806341c0e1b514606f57603c565b36603c57600080fd5b600080fd5b348015604c57600080fd5b5060536083565b604051605e919060d3565b60405180910390f35b606d608b565b005b348015607a57600080fd5b506081608d565b005b600047905090565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60cd8160ec565b82525050565b600060208201905060e6600083018460c6565b92915050565b600081905091905056fea264697066735822122085c255b845a00e400e256181fca2b7617c4b25849c55cfd6e2580c6439884f0c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x243 CODESIZE SUB DUP1 PUSH2 0x243 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1 DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA DUP2 PUSH2 0xBA JUMP JUMPDEST DUP2 EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x12C DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x2AAF6AF8 EQ PUSH1 0x67 JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH1 0x6F JUMPI PUSH1 0x3C JUMP JUMPDEST CALLDATASIZE PUSH1 0x3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x53 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5E SWAP2 SWAP1 PUSH1 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6D PUSH1 0x8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x81 PUSH1 0x8D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0xCD DUP2 PUSH1 0xEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xC2 SSTORE 0xB8 GASLIMIT LOG0 0xE BLOCKHASH 0xE 0x25 PUSH2 0x81FC LOG2 0xB7 PUSH2 0x7C4B 0x25 DUP5 SWAP13 SSTORE 0xCF 0xD6 0xE2 PC 0xC PUSH5 0x39884F0C64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "327:528:0:-:0;;;547:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;608:8;587:10;;:30;;;;;;;;;;;;;;;;;;547:77;327:528;;7:143:1;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;327:528:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_71": {
									"entryPoint": null,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_39": {
									"entryPoint": 131,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@kill_64": {
									"entryPoint": 141,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@payToContract_43": {
									"entryPoint": 139,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361060335760003560e01c806312065fe01460415780632aaf6af814606757806341c0e1b514606f57603c565b36603c57600080fd5b600080fd5b348015604c57600080fd5b5060536083565b604051605e919060d3565b60405180910390f35b606d608b565b005b348015607a57600080fd5b506081608d565b005b600047905090565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60cd8160ec565b82525050565b600060208201905060e6600083018460c6565b92915050565b600081905091905056fea264697066735822122085c255b845a00e400e256181fca2b7617c4b25849c55cfd6e2580c6439884f0c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0x2AAF6AF8 EQ PUSH1 0x67 JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH1 0x6F JUMPI PUSH1 0x3C JUMP JUMPDEST CALLDATASIZE PUSH1 0x3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x53 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5E SWAP2 SWAP1 PUSH1 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6D PUSH1 0x8B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x81 PUSH1 0x8D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0xCD DUP2 PUSH1 0xEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xC2 SSTORE 0xB8 GASLIMIT LOG0 0xE BLOCKHASH 0xE 0x25 PUSH2 0x81FC LOG2 0xB7 PUSH2 0x7C4B 0x25 DUP5 SWAP13 SSTORE 0xCF 0xD6 0xE2 PC 0xC PUSH5 0x39884F0C64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "327:528:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:8;;;327:528;742:8;;;388:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:46;;;:::i;:::-;;634:64;;;;;;;;;;;;;:::i;:::-;;388:93;431:4;453:21;446:28;;388:93;:::o;491:46::-;:::o;634:64::-;680:10;;;;;;;;;;667:24;;;7:118:1;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "60000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "135",
								"getBalance()": "317",
								"kill()": "29899",
								"payToContract()": "120"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 327,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 547,
									"end": 624,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 616,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 597,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 587,
									"end": 617,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 587,
									"end": 617,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 587,
									"end": 617,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 587,
									"end": 617,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 547,
									"end": 624,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 327,
									"end": 855,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 327,
									"end": 855,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 327,
									"end": 855,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 327,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 855,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085c255b845a00e400e256181fca2b7617c4b25849c55cfd6e2580c6439884f0c64736f6c63430008070033",
									".code": [
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "2AAF6AF8"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "41C0E1B5"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 838,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 327,
											"end": 855,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 327,
											"end": 855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 742,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 634,
											"end": 698,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 481,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 634,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 690,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 690,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 680,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 667,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 667,
											"end": 691,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"kill()": "41c0e1b5",
							"payToContract()": "2aaf6af8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payToContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/audits/ForceTransfer.sol\":\"ForceTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/audits/ForceTransfer.sol\":{\"keccak256\":\"0x6999364ba66aa69a44149d91a7f559b689a062330f5958a72da24f150da33176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad168f3aa3f3cac804dca5777ff8f67d976078673db744ff19a20fee3b6e455\",\"dweb:/ipfs/QmcffmnYJBCz5Xn4nsWev6z9V92mpx44iTS2VDD3uJwCsc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/audits/ForceTransfer.sol:ForceTransfer",
								"label": "toTransfer",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/audits/ForceTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/audits/ForceTransfer.sol",
					"exportedSymbols": {
						"Balance": [
							25
						],
						"ForceTransfer": [
							79
						]
					},
					"id": 80,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Balance",
							"nameLocation": "75:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "137:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 8,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "162:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Balance_$25",
																	"typeString": "contract Balance"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Balance_$25",
																	"typeString": "contract Balance"
																}
															],
															"id": 7,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 6,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "154:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "154:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "154:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 11,
												"nodeType": "Return",
												"src": "147:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "98:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "108:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "132:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:6:0"
									},
									"scope": 25,
									"src": "89:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "220:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 16,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "230:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "230:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "230:8:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:0:0"
									},
									"scope": 25,
									"src": "192:53:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "278:45:0",
										"statements": []
									},
									"id": 24,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:0:0"
									},
									"scope": 25,
									"src": "251:72:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 80,
							"src": "66:259:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "ForceTransfer",
							"nameLocation": "336:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "toTransfer",
									"nameLocation": "371:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 79,
									"src": "355:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "355:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "436:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 34,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "461:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ForceTransfer_$79",
																	"typeString": "contract ForceTransfer"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ForceTransfer_$79",
																	"typeString": "contract ForceTransfer"
																}
															],
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "453:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 32,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "453:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "453:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "453:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 31,
												"id": 37,
												"nodeType": "Return",
												"src": "446:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "397:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "431:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:6:0"
									},
									"scope": 79,
									"src": "388:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "530:7:0",
										"statements": []
									},
									"functionSelector": "2aaf6af8",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payToContract",
									"nameLocation": "500:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:0:0"
									},
									"scope": 79,
									"src": "491:46:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "577:47:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "toTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "587:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 51,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "608:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "600:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 49,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "600:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "600:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "587:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "587:30:0"
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "567:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "559:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:18:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:0:0"
									},
									"scope": 79,
									"src": "547:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "657:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 60,
															"name": "toTransfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 59,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "667:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "667:24:0"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "kill",
									"nameLocation": "643:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:0:0"
									},
									"scope": 79,
									"src": "634:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "732:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 67,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "742:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "742:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "742:8:0"
											}
										]
									},
									"id": 71,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:0:0"
									},
									"scope": 79,
									"src": "704:53:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "790:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 74,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "838:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "838:8:0"
											}
										]
									},
									"id": 78,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:0:0"
									},
									"scope": 79,
									"src": "763:90:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 80,
							"src": "327:528:0",
							"usedErrors": []
						}
					],
					"src": "33:824:0"
				},
				"id": 0
			}
		}
	}
}